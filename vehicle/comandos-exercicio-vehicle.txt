# Comandos do Exercício sobre Herança

## 1. Crie uma Classe Pai (Veiculo): 
    Implemente uma classe chamada Veiculo com um construtor que aceita dois parâmetros, marca e modelo.
    A classe deve ter um atributo protegido _ligado inicializado como False por padrão.

## 2. Construa o Método Especial str: 
    Adicione um método especial str à classe Veiculo que retorna uma mensagem formatada com a marca, modelo e o estado de ligado/desligado do veículo.

## 3. Crie uma Classe Filha (Carro): 
    Agora, crie uma classe chamada Carro que herda da classe Veiculo. No construtor da classe Carro. 
    Inclua um novo atributo chamado portas que indica a quantidade de portas do carro.

## 4. Implemente o Método Especial str na Classe Filha: 
    Adicione um método especial str à classe Carro que estenda o método da classe pai (Veiculo). 
    Inclua a informação sobre a quantidade de portas do carro.

## 5. Crie uma Classe Filha (Moto): 
    Similarmente, crie uma classe chamada Moto que também herda de Veiculo.
    Adicione um novo atributo chamado tipo ao construtor, indicando se a moto é esportiva ou casual.

## 6. Implemente o Método Especial str na Classe Filha (Moto): 
    Adicione um método especial str à classe Moto que estenda o método da classe pai (Veiculo). 
    Inclua a informação sobre o tipo da moto.

## 7. Crie um Arquivo Main (main.py): 
    Crie um arquivo chamado main.py no mesmo diretório que suas classes.

## 8. Importe e Instancie Objetos: 
    No arquivo main.py, importe as classes Carro e Moto. 
    Em seguida, crie três instâncias de Carro e Moto com diferentes marcas, modelos, quantidade de portas e tipos.

## 9. Exiba as Informações: 
    Para cada instância, imprima no console as informações utilizando o método str.

# Comandos do Exercício sobre Polimorfismo

## 10. Criando método abstrato na Classe Mãe:
    Na classe Veiculo, crie um método abstrato chamado ligar. 
    Para isso, faça a importação de "from abc import ABC, abstractmethod".
    Escreva o decorador @abstractmethod para o método abstrato.

## 11. Acrescentando atributo na Classe Filha:
    Atribua o atributo específico cor à classe Carro.

## 12. Implementando o método abstrato nas Classes Filhas:
    Escreva o código para tornar o estado do atributo _ligado para True, na classe Carro e na classe Moto.

## 13. Instanciando mais objetos:
    No arquivo main.py, instancie três objetos da classe Carro com diferentes características, como marca, modelo e cor.

## 14. Aplicando o método polimórfico:
    Use o método abstrato ligar() implementado em Carro e Moto, na função main().
    Mostre na tela as instâncias.